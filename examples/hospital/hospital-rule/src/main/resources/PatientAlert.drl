package org.rioproject.examples.hospital;

import org.rioproject.examples.hospital.Doctor;
import org.rioproject.examples.hospital.Patient;
import org.rioproject.examples.hospital.CalculablePatient;
import org.rioproject.examples.hospital.RuleServiceHelper;
import org.rioproject.watch.Calculable;

global org.rioproject.gnostic.DeployedServiceContext context;

declare CalculablePatient
    @role(event)
    @timestamp(date)
end

rule "Patient Set Alert Rule"
when
    $p: CalculablePatient(id == "pulse",
                          patient.statusAsOrdinal == 1,
                          $name: patient.patientInfo.name) from entry-point "calculables-stream"
    $avg: Number (doubleValue > 0, doubleValue < 50 ) from accumulate (
         CalculablePatient(/*this != $p,*/
                           id == "pulse",
                           patient.patientInfo.name == $name,
                           patient.statusAsOrdinal == 1,
                           $value: value)
        over window:time(15s) from entry-point "calculables-stream", average($value))
then
    Patient p = $p.getPatient();
    p.setStatus(Patient.Status.AT_RISK);
    Doctor d = p.getDoctor();
    d.updatePatient(p);
    Bed bed = p.getBed();
    bed.updatePatient(p);
end

rule "Patient Clear Alert Rule"
when
    $p: CalculablePatient(id == "pulse",
                          patient.statusAsOrdinal == 0,
                          $name: patient.patientInfo.name) from entry-point "calculables-stream"
    Number (doubleValue >= 50 ) from accumulate (
         CalculablePatient(this != $p,
                           id == "pulse",
                           patient.patientInfo.name == $name,
                           patient.statusAsOrdinal == 0,
                           $value: value)
        over window:time(15s) from entry-point "calculables-stream", average($value))

then
    Patient p = $p.getPatient();
    p.setStatus(Patient.Status.STABLE);
    Doctor d = p.getDoctor();
    d.updatePatient(p);
    Bed bed = p.getBed();
    bed.updatePatient(p);
end
